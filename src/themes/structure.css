* {
    font-size: inherit;
    box-sizing: border-box;
    color: var(--light);
    text-overflow: ellipsis;

}

body {
    margin: 0px;
}

div {
    text-align: left;
}

.h-flex {
    display: flex;
    flex-direction: row;
    overflow-x: auto;
    align-items: stretch;
}

.v-flex {
    display: flex;
    flex-direction: row;
    overflow-x: auto;
    justify-content: center;
    align-items: center;
}

textarea {
    width: 100%;
    resize: none;
    overflow: auto; /* !! 결국 그게 되야하는데... 자동 리자이징. */
}

#App {

    font-size: 14px;

    width: 100vw;
    height: 100vh;

    background-color: var(--deep);
    display: flex;
    flex-direction: column;
    align-items: stretch;
    
    position: relative;

}
#App > * {
    flex-shrink: 0;
}

::-webkit-scrollbar {
    /* the scrollbar. */
    width: 4px;
	height: 4px;
} 
::-webkit-scrollbar-button /* the buttons on the scrollbar (arrows pointing upwards and downwards). */ {
    display: none;
}

::-webkit-scrollbar-thumb {
    /* the draggable scrolling handle. */
	background-color: var(--shade);
    border-radius: 8px;
    min-width: 10px;    
    min-height: 10px;
}
::-webkit-scrollbar-track /*  the track (progress bar) of the scrollbar. */ {

}
::-webkit-scrollbar-track-piece /* the track (progress bar) NOT covered by the handle. */ {

}
::-webkit-scrollbar-corner /* the bottom corner of the scrollbar, where both horizontal and vertical scrollbars meet. */ {

}
::-webkit-resizer /* the draggable resizing handle that appears at the bottom corner of some elements. */ {
    display: none;
}

.group {
    box-shadow: inset 0px 0px 0px 1px var(--deep);
    display: flex; 
    flex-direction: column;
    flex-shrink: 0;
}

.title {
    font-size: 2em;
    margin-bottom: 10px;
}

.window {
    overflow-x: auto;
    overflow-y: auto;
    /* border: 1px solid var(--deep); */
    /* flex-basis: 0; */
    /* flex-grow: 1; */
    box-shadow: inset 0px 0px 0px 1px var(--shade);
}

a, .link {
    text-decoration: none;
    color: var(--link)
}

a:hover {
    text-decoration: solid underline var(--link) 1px;
}

#RawEditor {
    line-height: 2;
    white-space: pre-wrap;
    padding: 10px;
    overflow: auto;
}

#LogPreview {
    overflow: hidden;
    padding: 0.5em;
    width: 100%; 
    max-height: 50%;
    background-color: var(--dark);
    border: 1px solid var(--deep);
    animation-name: logAppear;
    animation-duration: 2s;
    animation-iteration-count: 2;
    animation-timing-function: ease-out;
    overflow-y: auto;
}


.tabs {
    width: 100%;
    height: 100%;
    display: flex;
    flex-direction: column;
}

#View {
    overflow: auto;
    width: 100%;
    flex-grow: 1;
    flex-shrink: 1;
    display: flex;
    flex-direction: column;

}
#Editor {
    flex-grow: 1;
    overflow: auto;
}



button, button:not(:hover) {

    position: relative;
    
    box-shadow: 
    /* inset 0px 1px 2px 0px var(--mild), */ /* top */
    /* inset 0px -3px 4px 0px var(--mild), */ /* bottom, extruded */
    /* inset 0px -1px 0px 0px var(--mild), */ /* bottom, extruded */
    /* inset 0px 0px 2px 1px var(--mild), */ /* border */
    
    /* fissure */
    0px -1px 0px 0px var(--shade), /* top hilight */
    0px 2px 4px 0px var(--deeper); /* casting shadow */

}

button:before {
    
    content: '';
    position: absolute;
    top: 0.2em;
    left: 0.2em;
    width: 0.3em;
    height: 0.3em;
    border-radius: 100%;;
    background-color: var(--shade);
    
}

button:hover:before {
    
    background-color: var(--light);
    box-shadow: 0px 0px 8px 0px var(--slight);
}

button, button:not(:hover), input, textarea, select {


    color: var(--slight);   
    
    border: none;
    outline: none;

    transition: color 0.15s ease, transform 0.1s ease;

    padding-top: 4px;
    padding-bottom: 4px;
    
    padding: 0.25em 0.5em 0.25em 0.5em;

    background-color: var(--deep);
    border: none;
    outline: none;

    border-radius: 0.5em;

    margin: 0.25em;
    
    flex-shrink: 0;



}

textarea {
    border-radius: 0px;
}


button:hover {
    color: var(--light); 
}

@keyframes active {
    0% {    
        box-shadow: 
        0px -1px 0px 0px var(--shade), /* top hilight */
        0px 4px 4px 0px var(--deeper); /* casting shadow */
    }
    50% {
        box-shadow: 
        0px -1px 1px 0px var(--shade),
        0px 1px 1px 0px var(--deeper); /* casting shadow */
    }
    100% {
        box-shadow: 
        inset 0px 1px 1px 0px var(--dark),
        inset 0px 1px 2px 0px var(--dark),
        inset 0px -1px 1px 0px var(--dark),
        0px 2px 1px 0px var(--shade); 
    }
}

button:focus {
    color: var(--light);
    
    box-shadow: 
    inset 0px 1px 1px 0px var(--dark),
    inset 0px 1px 2px 0px var(--dark),
    inset 0px -1px 1px 0px var(--dark),
    0px 2px 1px 0px var(--shade); 
    
    animation-name: active;
    animation-duration: 0.15s;
    animation-iteration-count: 1;
    /* animation-direction: alternate; */
    animation-timing-function: ease-out;
    
    /* box-shadow: 
    0px -1px 1px 0px var(--shade),
    0px 1px 1px 0px var(--deeper); */ /* casting shadow */
}



.nothing button:focus {
    box-shadow: 
    0px 2px 8px 0px var(--light); /* casting shadow */
}
    
/* animation-name: active;
animation-duration: 0.2s;
animation-iteration-count: infinite;
animation-direction: alternate;
animation-timing-function: ease; */

/* transform: translate(0px, 2px); */

input, textarea {
    box-shadow: 0px 0px 0px 1px var(--deeper);
}

input:hover, textarea:hover, input:focus, textarea:focus, .clickable:hover {
    
    color: var(--light) !important;
    background-color: var(--shade);

}



input:active, .clickable:active {

    border: none;
    outline: none;
    
}


#Header {
    overflow-x: auto;
    #QuickActions {
        display: flex;
        > * {
            min-width: 2em;
            /* height: 2.5em; */
            /* margin: 0px; */
        }
    }
    #Commands {
        width: fit-content;
    }
}




#PickRoot {
}

#GoTo {
    flex-grow: 1;
}

.appear {
    animation-name: appear;
    animation-duration: 0.3s;
    animation-iteration-count: 1;
    animation-timing-function: ease-in;
}

.node {
    
    overflow: visible;

    > * {
        overflow: visible;
    }

    > *:has(.value) > *:not(:last-child) {
        margin-right: 1em;
    }
    .value {
        margin: 0px;
        min-width: 10em;
        width: 100vw;
        
        padding-left: 1em;
        padding-right: 0em;
        padding-top: 0em;
        padding-bottom: 0em;

        flex-grow: 1;
        
        background-color: transparent;
        box-shadow: inset 0px 0px 0px 0px var(--deep) !important;

        line-height: 1.8em;

    }
    .value:hover {
        background-color: var(--deep);
        box-shadow: 
        inset 4px 0px 0px 0px var(--shade) !important;
    }
    .value:focus {
        box-shadow: 
        inset 4px 0px 0px 0px var(--light) !important;
    }
    .options {
        display: none;
        overflow: visible;
        align-items: flex-start;
        button {
            min-width: 2em;
        }
    }
    .links {
        margin-left: 2em;
    }
    .linksOpener {

        z-index: 1;
        
        /* margin: 0.5em 0.5em 0.5em 1em; */
        margin: 0px;

        /* align-self: flex-end; */

        width: 2em;
        height: 2em;

        color: var(--slight);
        background-color: var(--shade);
        
        padding: 0px;
        font-size: 1em;
        box-shadow: none;

        scale: 0.7;
        /* transition: scale 0.2s cubic-bezier(0, 0, 0.38, 1.55) !important; */

        box-shadow: none !important;

        :active {
            animation: none;
        }

    }
    
    .linksOpener:before {
        display: none;
    }

}

.node.selected {
    /* box-shadow: inset 4px 0px 0px -2px var(--light) !important; */
    > * > * > .options {
        display: flex;
        flex-direction: column;
    }
}

.node.authName {
    > * > .autoResize > .value {
    }
    > * > .linksOpener {
        color: var(--dark) !important;
        background-color: var(--authName) !important;
    }
}

.node.error .value {
    color: var(--error) !important;
}


.Command {
    width: fit-content;
}

.Command .function { 
    color: var(--executable);
}

#Main {
    overflow: auto;
    width: 100%;
    flex-grow: 1;
    flex-shrink: 1;
    display: flex;
}

#Commands {
    flex-grow: 1;
    display: flex;
    flex-direction: column;
    overflow: hidden;

    #Logs {
        width: 100%;
        flex-grow: 1;
        display: flex;
    }
}

[tooltip]:hover::after {

    display: block;
    position: fixed;

    transform: translate(0.25em, 0.75em);
    
    content: attr(tooltip);
    padding: 0.5em;
    background: var(--light);
    color: var(--dark);
    border-radius: 0.5em;
    z-index: 3;

    width: max-content;
    height: fit-content;

    animation-name: appear;
    animation-duration: 0.2s;
    animation-iteration-count: 1;
    animation-timing-function: ease-in;

}

#Footer {    
    display: flex;
    flex-direction: column-reverse;
    overflow: hidden;
    max-height: 50%;
}

#LogsView {
    display: flex;
    padding: 0px;
    width: 100%;
    overflow: hidden;

    /* height: 100%; NEVER. */

    flex-grow: 1;
    
    button {
        height: fit-content;
        margin: 0px;
        padding: 0.25em 0.5em 0.25em 0.5em ;
    }
    #logs {
        flex-grow: 1;
        overflow: auto;
    }
    .log {
        white-space: nowrap;
        word-wrap: unset;
    }
    .options {
        display: flex;
    }
}

#LogsView.expanded {
    .log {
        white-space: pre-wrap;
        word-wrap: break-word;
    }
    .options {
        display: block;
    }
}

.log {
    text-overflow: ellipsis;
    overflow: hidden;
    padding: 0.25em 0.5em 0.25em 0.5em ;
    color: var(--alert);
}

.log:hover {
    background-color: var(--deeper);
}

.log.error {
    color: var(--error);
}

.log.success {
    color: var(--success);
}

#CommandPalette {
    width: 100%;
}

#View {    
}

#Editor {
    position: relative;
    > * {
        padding: 1em;
    }
}

#Editor > .overlay {
    position: absolute;
    top: 0px;
    left: 0px;
    width: 100%;
    height: 100%;
    pointer-events: none;
}

.originIndicator {
    z-index: 0;
    border-left: 4px dotted var(--mildshade);
    border-bottom: 4px dotted var(--mildshade);
    /* box-shadow: inset 2px -2px 0px 0px var(--mildshade); */
    border-bottom-left-radius: 0em;
}